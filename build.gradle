buildscript {
    repositories {
      // jcenter()
      // mavenCentral()
		maven
    {

	url "https://repository.cloudera.com/artifactory/repo/"
 	
    }
    }
    dependencies {
        classpath "net.serenity-bdd:serenity-gradle-plugin:2.0.7"
    }
}

plugins {
    id "java"
    id "idea"
}

apply plugin: "net.serenity-bdd.aggregator"

repositories.addAll(buildscript.repositories)

description = 'Gradle solution for Serenity-Cucumber forking mechanizm'
group 'com.github.scormaq'
version = '1.0-SNAPSHOT'

idea.module {
    downloadJavadoc = true
    downloadSources = true
}

dependencies {
    compile "net.serenity-bdd:serenity-core:2.0.7"
    compile "net.serenity-bdd:serenity-cucumber:1.9.18"
    compile 'org.slf4j:slf4j-api:1.7.21'
    testCompile 'junit:junit:4.12'
    testCompile 'net.serenity-bdd:serenity-junit:1.2.3-rc.9' 
    testCompile 'net.serenity-bdd:serenity-screenplay:1.2.3-rc.9'
    testCompile 'net.serenity-bdd:serenity-rest-assured:1.2.3-rc.9'
    testCompile 'net.serenity-bdd:serenity-report-resources:1.2.3-rc.9'
    testCompile "org.codehaus.groovy:groovy-all:2.4.7"
   // testCompile('org.assertj:assertj-core:1.7.0')
    compile "org.ini4j:ini4j:0.5.2"
    compile "org.apache.poi:poi:3.12"
    compile "org.apache.poi:poi-ooxml:3.12"
    compile "org.apache.poi:poi-ooxml-schemas:3.12"
    compile "dom4j:dom4j:1.6"
    compile "org.apache.xmlbeans:xmlbeans:2.3.0"
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'org.slf4j:slf4j-simple:1.7.21'
    compile 'org.json:json:20160212'
    compile 'com.fasterxml.jackson.core:jackson-core:2.2.2'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.2.2'
	compile 'com.fasterxml.jackson.core:jackson-annotations:2.2.2'
	// https://mvnrepository.com/artifact/org.apache.poi/poi
    compile group: 'org.apache.poi', name: 'poi', version: '3.9'
    // https://mvnrepository.com/artifact/org.assertj/assertj-core
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.12.1'
    // https://mvnrepository.com/artifact/commons-configuration/commons-configuration
compile group: 'commons-configuration', name: 'commons-configuration', version: '1.6'
    
	compileJava { 
	  options.encoding = "UTF-8" 
	}
	testCompile 'junit:junit:4.12'
	
}

gradle.startParameter.continueOnFailure = true

test{
    systemProperty 'env', System.getProperty("env")
    systemProperty "cucumber.options", System.getProperty("cucumber.options")
   
  
    List<String> runners = file('src/test/java/com/fd/dp/runner').listFiles()
            .collect { it.name }
            .findAll { it =~ 'Runner' }
            .collect { it.take(it.lastIndexOf('.')) } // trim '.java' to use file names in gradle test filter

    maxParallelForks = System.properties.'serenity.fork.count' as Integer ?: 1
    maxParallelForks = [maxParallelForks, runners.size()].min() // set correct maximum number of forks, if value in 'serenity.fork.count' was too big
    systemProperty 'serenity.fork.count', maxParallelForks // correct that property as well
    maxParallelForks.times { filter.includeTestsMatching runners[it] }

    ignoreFailures = true
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'
} 
gradle.startParameter.continueOnFailure = true

